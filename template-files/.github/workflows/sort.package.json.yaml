name: Sort Package.json Files

on:
  schedule:
    - cron: "0 0 * * 3"
  workflow_dispatch:

jobs:
  sort-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install sort-package-json
        run: npm install -g sort-package-json

      - name: Ensure "🤖 bot" label exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check if label exists, create if not
          if ! gh label list | grep -q "🤖 bot"; then
            gh label create "🤖 bot" \
              --description "Automatically generated pull request" \
              --color "0075ca"
          fi

      - name: Set fixed branch name
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          echo "BRANCH_NAME=chore/sort-package-json" >> $GITHUB_ENV

      - name: Create or switch to branch
        run: |
          if git ls-remote --heads origin $BRANCH_NAME | grep -q $BRANCH_NAME; then
            git fetch origin $BRANCH_NAME
            git checkout $BRANCH_NAME
            git reset --hard origin/<%= branchName %>
          else
            git checkout -b $BRANCH_NAME
          fi

      - name: Find and sort package.json files
        run: |
          # Find all package.json files and sort them
          find . -name "package.json" -not -path "*/node_modules/*" -exec sort-package-json {} \;

      - name: Check for changes
        id: check_changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Push changes and manage PR
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_GITHUB_TOKEN }}
        run: |
          git add -A
          git commit -m "chore: sort package.json files"
          git push -f origin $BRANCH_NAME

          # Check if PR already exists
          existing_pr=$(gh pr list --head $BRANCH_NAME --json number -q '.[0].number')

          if [ -n "$existing_pr" ]; then
            echo "Updating existing PR #$existing_pr"
          else
            echo "Creating new PR"
            gh pr create \
              --title "[ci] chore: sort package.json files" \
              --body "This PR was automatically created to sort package.json files in the repository using sort-package-json." \
              --label "🤖 bot" \
              --base <%= branchName %> \
              --head $BRANCH_NAME
          fi
